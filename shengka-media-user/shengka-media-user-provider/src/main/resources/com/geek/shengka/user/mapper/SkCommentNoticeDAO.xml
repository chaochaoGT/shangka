<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.geek.shengka.user.mapper.SkCommentNoticeDAO">
  <resultMap id="BaseResultMap" type="com.geek.shengka.user.entity.SkCommentNotice">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="notice_user_id" jdbcType="BIGINT" property="noticeUserId" />
    <result column="video_id" jdbcType="VARCHAR" property="videoId" />
    <result column="voice_id" jdbcType="VARCHAR" property="voiceId" />
    <result column="notice_type" jdbcType="TINYINT" property="noticeType" />
    <result column="notice_state" jdbcType="TINYINT" property="noticeState" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="notice_content" jdbcType="VARCHAR" property="noticeContent" />
    <result column="nick_name" jdbcType="VARCHAR" property="nickName" />
    <result column="user_icon" jdbcType="VARCHAR" property="userIcon" />
    <result column="video_url" jdbcType="VARCHAR" property="videoUrl" />
    <result column="voice_url" jdbcType="VARCHAR" property="voiceUrl" />
    <result column="voice_duration" jdbcType="INTEGER" property="voiceDuration" />
  </resultMap>
  <sql id="Base_Column_List">
    id, user_id, notice_user_id, video_id, voice_id, notice_type, notice_state, create_time, 
    update_time, notice_content, nick_name, user_icon, video_url, voice_url, voice_duration
  </sql>
  
  <resultMap id="CommentNoticeListResultMap" type="com.geek.shengka.user.entity.vo.SkCommentNoticeVo">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="notice_user_id" jdbcType="BIGINT" property="noticeUserId" />
    <result column="video_id" jdbcType="VARCHAR" property="videoId" />
    <result column="voice_id" jdbcType="VARCHAR" property="voiceId" />
    <result column="notice_type" jdbcType="TINYINT" property="noticeType" />
    <result column="notice_state" jdbcType="TINYINT" property="noticeState" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="notice_content" jdbcType="VARCHAR" property="noticeContent" />
    <result column="nick_name" jdbcType="VARCHAR" property="nickName" />
    <result column="user_icon" jdbcType="VARCHAR" property="userIcon" />
    <result column="video_url" jdbcType="VARCHAR" property="videoUrl" />
    <result column="voice_url" jdbcType="VARCHAR" property="voiceUrl" />
    <result column="voice_duration" jdbcType="INTEGER" property="voiceDuration" />
  </resultMap>
  <sql id="CommentNoticeList_Column_List">
    id, user_id, notice_user_id, video_id, voice_id, notice_type, notice_state, create_time, 
    update_time, notice_content, nick_name, user_icon, video_url, voice_url, voice_duration
  </sql>
  
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from sk_comment_notice
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from sk_comment_notice
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.geek.shengka.user.entity.SkCommentNotice" useGeneratedKeys="true">
    insert into sk_comment_notice (user_id, notice_user_id, video_id, 
      voice_id, notice_type, notice_state, 
      create_time, update_time, notice_content, 
      nick_name, user_icon, video_url, 
      voice_url, voice_duration)
    values (#{userId,jdbcType=BIGINT}, #{noticeUserId,jdbcType=BIGINT}, #{videoId,jdbcType=VARCHAR}, 
      #{voiceId,jdbcType=VARCHAR}, #{noticeType,jdbcType=TINYINT}, #{noticeState,jdbcType=TINYINT}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, #{noticeContent,jdbcType=VARCHAR}, 
      #{nickName,jdbcType=VARCHAR}, #{userIcon,jdbcType=VARCHAR}, #{videoUrl,jdbcType=VARCHAR}, 
      #{voiceUrl,jdbcType=VARCHAR}, #{voiceDuration,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.geek.shengka.user.entity.SkCommentNotice" useGeneratedKeys="true">
    insert into sk_comment_notice
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        user_id,
      </if>
      <if test="noticeUserId != null">
        notice_user_id,
      </if>
      <if test="videoId != null">
        video_id,
      </if>
      <if test="voiceId != null">
        voice_id,
      </if>
      <if test="noticeType != null">
        notice_type,
      </if>
      <if test="noticeState != null">
        notice_state,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="noticeContent != null">
        notice_content,
      </if>
      <if test="nickName != null">
        nick_name,
      </if>
      <if test="userIcon != null">
        user_icon,
      </if>
      <if test="videoUrl != null">
        video_url,
      </if>
      <if test="voiceUrl != null">
        voice_url,
      </if>
      <if test="voiceDuration != null">
        voice_duration,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="noticeUserId != null">
        #{noticeUserId,jdbcType=BIGINT},
      </if>
      <if test="videoId != null">
        #{videoId,jdbcType=VARCHAR},
      </if>
      <if test="voiceId != null">
        #{voiceId,jdbcType=VARCHAR},
      </if>
      <if test="noticeType != null">
        #{noticeType,jdbcType=TINYINT},
      </if>
      <if test="noticeState != null">
        #{noticeState,jdbcType=TINYINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="noticeContent != null">
        #{noticeContent,jdbcType=VARCHAR},
      </if>
      <if test="nickName != null">
        #{nickName,jdbcType=VARCHAR},
      </if>
      <if test="userIcon != null">
        #{userIcon,jdbcType=VARCHAR},
      </if>
      <if test="videoUrl != null">
        #{videoUrl,jdbcType=VARCHAR},
      </if>
      <if test="voiceUrl != null">
        #{voiceUrl,jdbcType=VARCHAR},
      </if>
      <if test="voiceDuration != null">
        #{voiceDuration,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.geek.shengka.user.entity.SkCommentNotice">
    update sk_comment_notice
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="noticeUserId != null">
        notice_user_id = #{noticeUserId,jdbcType=BIGINT},
      </if>
      <if test="videoId != null">
        video_id = #{videoId,jdbcType=VARCHAR},
      </if>
      <if test="voiceId != null">
        voice_id = #{voiceId,jdbcType=VARCHAR},
      </if>
      <if test="noticeType != null">
        notice_type = #{noticeType,jdbcType=TINYINT},
      </if>
      <if test="noticeState != null">
        notice_state = #{noticeState,jdbcType=TINYINT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="noticeContent != null">
        notice_content = #{noticeContent,jdbcType=VARCHAR},
      </if>
      <if test="nickName != null">
        nick_name = #{nickName,jdbcType=VARCHAR},
      </if>
      <if test="userIcon != null">
        user_icon = #{userIcon,jdbcType=VARCHAR},
      </if>
      <if test="videoUrl != null">
        video_url = #{videoUrl,jdbcType=VARCHAR},
      </if>
      <if test="voiceUrl != null">
        voice_url = #{voiceUrl,jdbcType=VARCHAR},
      </if>
      <if test="voiceDuration != null">
        voice_duration = #{voiceDuration,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.geek.shengka.user.entity.SkCommentNotice">
    update sk_comment_notice
    set user_id = #{userId,jdbcType=BIGINT},
      notice_user_id = #{noticeUserId,jdbcType=BIGINT},
      video_id = #{videoId,jdbcType=VARCHAR},
      voice_id = #{voiceId,jdbcType=VARCHAR},
      notice_type = #{noticeType,jdbcType=TINYINT},
      notice_state = #{noticeState,jdbcType=TINYINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      notice_content = #{noticeContent,jdbcType=VARCHAR},
      nick_name = #{nickName,jdbcType=VARCHAR},
      user_icon = #{userIcon,jdbcType=VARCHAR},
      video_url = #{videoUrl,jdbcType=VARCHAR},
      voice_url = #{voiceUrl,jdbcType=VARCHAR},
      voice_duration = #{voiceDuration,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
  
  
   <select id="findCommentNoticesByUserId" parameterType="java.lang.Long" resultMap="CommentNoticeListResultMap">
    select 
    <include refid="CommentNoticeList_Column_List" />
    from sk_comment_notice
     where 1=1 
     <if test="userId != null">
      and  notice_user_id = #{userId,jdbcType=BIGINT}
     </if>
    order by create_time desc
       <if test="startRecordNumb!=null and pageCount!=null">
           limit #{startRecordNumb,jdbcType=INTEGER},#{pageCount,jdbcType=INTEGER}
       </if>
  </select>
  
    <delete id="deleteInIds" parameterType="java.util.List">
    delete from sk_comment_notice
    where id in 
    <foreach collection="list" index="index" item="item" open="(" separator="," close=")">   
        #{item}   
    </foreach>  
  </delete>
</mapper>