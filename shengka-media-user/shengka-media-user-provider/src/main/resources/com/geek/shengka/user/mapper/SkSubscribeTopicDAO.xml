<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.geek.shengka.user.mapper.SkSubscribeTopicDAO">
  <resultMap id="BaseResultMap" type="com.geek.shengka.user.entity.SkSubscribeTopic">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="topic_id" jdbcType="BIGINT" property="topicId" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
  </resultMap>
  <sql id="Base_Column_List">
    id, user_id, topic_id, create_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from sk_subscribe_topic
    where id = #{id,jdbcType=BIGINT}
  </select>
    <select id="selectByTopicIdUid" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from sk_subscribe_topic
        where user_id = #{userId,jdbcType=BIGINT}
        and topic_id=#{topicId,jdbcType=BIGINT}
    </select>
    <select id="attentionTopicList" resultType="com.geek.shengka.user.entity.vo.SkTopicConfigVO">
        SELECT
        sut.topic_id AS id,
        stc.topic_name AS topicName,
        stc.topic_intro AS topicIntro ,
        stc.topic_logo AS topicLogo,
        stc.push_count AS pushCount,
        stc.topic_tag AS topicTag,
        su.subscribe_topic_num AS subscribeTopicNum
        FROM
        sk_subscribe_topic AS sut
        JOIN sk_topic_config AS stc ON sut.topic_id = stc.id
        LEFT JOIN sk_user_base_info AS su ON sut.user_id = su.user_id
        WHERE
        stc.`enable` = 0
        AND sut.user_id = #{userId,jdbcType=BIGINT}
        ORDER BY
        sut.create_time DESC
        limit #{pageSize} offset #{offset}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from sk_subscribe_topic
    where id = #{id,jdbcType=BIGINT}
  </delete>
    <delete id="deleteByTopicUid">
        delete from sk_subscribe_topic
        where user_id = #{userId,jdbcType=BIGINT}
        and topic_id=#{topicId,jdbcType=BIGINT}
    </delete>
    <insert id="insert" parameterType="com.geek.shengka.user.entity.SkSubscribeTopic">
    insert into sk_subscribe_topic (id, user_id, topic_id, 
      create_time)
    values (#{id,jdbcType=BIGINT}, #{userId,jdbcType=BIGINT}, #{topicId,jdbcType=BIGINT}, 
      #{createTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.geek.shengka.user.entity.SkSubscribeTopic">
    insert into sk_subscribe_topic
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="topicId != null">
        topic_id,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="topicId != null">
        #{topicId,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.geek.shengka.user.entity.SkSubscribeTopic">
    update sk_subscribe_topic
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="topicId != null">
        topic_id = #{topicId,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.geek.shengka.user.entity.SkSubscribeTopic">
    update sk_subscribe_topic
    set user_id = #{userId,jdbcType=BIGINT},
      topic_id = #{topicId,jdbcType=BIGINT},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>