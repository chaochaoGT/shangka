<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.geek.shengka.gold.mapper.SkUserTaskRecordDAO">
  <resultMap id="BaseResultMap" type="com.geek.shengka.gold.entity.SkUserTaskRecord">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="task_id" jdbcType="BIGINT" property="taskId" />
    <result column="task_type" jdbcType="TINYINT" property="taskType" />
    <result column="trigger_event" jdbcType="TINYINT" property="triggerEvent" />
    <result column="receive_limit" jdbcType="INTEGER" property="receiveLimit" />
    <result column="award_amount_type" jdbcType="TINYINT" property="awardAmountType" />
    <result column="award_fix_amount" jdbcType="INTEGER" property="awardFixAmount" />
    <result column="award_min" jdbcType="INTEGER" property="awardMin" />
    <result column="award_max" jdbcType="INTEGER" property="awardMax" />
    <result column="award" jdbcType="INTEGER" property="award" />
    <result column="receive_state" jdbcType="TINYINT" property="receiveState" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="trade_no" jdbcType="VARCHAR" property="tradeNo" />
    <result column="handle_state" jdbcType="TINYINT" property="handleState" />
    <result column="handle_remark" jdbcType="VARCHAR" property="handleRemark" />
    <result column="order_no" jdbcType="VARCHAR" property="orderNo" />
    <result column="scychronize_flag" jdbcType="VARCHAR" property="scychronizeFlag" />
    <result column="process_cts" jdbcType="INTEGER" property="processCts" />
  </resultMap>
  <sql id="Base_Column_List">
    id, user_id, task_id, task_type, trigger_event, receive_limit, award_amount_type, 
    award_fix_amount, award_min, award_max, award, receive_state, create_time, update_time, 
    trade_no, handle_state, handle_remark, order_no, scychronize_flag, process_cts
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from sk_user_task_record
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from sk_user_task_record
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.geek.shengka.gold.entity.SkUserTaskRecord">
    insert into sk_user_task_record (id, user_id, task_id, 
      task_type, trigger_event, receive_limit, 
      award_amount_type, award_fix_amount, award_min, 
      award_max, award, receive_state, 
      create_time, update_time, trade_no, 
      handle_state, handle_remark, order_no, 
      scychronize_flag, process_cts)
    values (#{id,jdbcType=BIGINT}, #{userId,jdbcType=BIGINT}, #{taskId,jdbcType=BIGINT}, 
      #{taskType,jdbcType=TINYINT}, #{triggerEvent,jdbcType=TINYINT}, #{receiveLimit,jdbcType=INTEGER}, 
      #{awardAmountType,jdbcType=TINYINT}, #{awardFixAmount,jdbcType=INTEGER}, #{awardMin,jdbcType=INTEGER}, 
      #{awardMax,jdbcType=INTEGER}, #{award,jdbcType=INTEGER}, #{receiveState,jdbcType=TINYINT}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, #{tradeNo,jdbcType=VARCHAR}, 
      #{handleState,jdbcType=TINYINT}, #{handleRemark,jdbcType=VARCHAR}, #{orderNo,jdbcType=VARCHAR}, 
      #{scychronizeFlag,jdbcType=VARCHAR}, #{processCts,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.geek.shengka.gold.entity.SkUserTaskRecord">
    insert into sk_user_task_record
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="taskId != null">
        task_id,
      </if>
      <if test="taskType != null">
        task_type,
      </if>
      <if test="triggerEvent != null">
        trigger_event,
      </if>
      <if test="receiveLimit != null">
        receive_limit,
      </if>
      <if test="awardAmountType != null">
        award_amount_type,
      </if>
      <if test="awardFixAmount != null">
        award_fix_amount,
      </if>
      <if test="awardMin != null">
        award_min,
      </if>
      <if test="awardMax != null">
        award_max,
      </if>
      <if test="award != null">
        award,
      </if>
      <if test="receiveState != null">
        receive_state,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="tradeNo != null">
        trade_no,
      </if>
      <if test="handleState != null">
        handle_state,
      </if>
      <if test="handleRemark != null">
        handle_remark,
      </if>
      <if test="orderNo != null">
        order_no,
      </if>
      <if test="scychronizeFlag != null">
        scychronize_flag,
      </if>
      <if test="processCts != null">
        process_cts,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="taskId != null">
        #{taskId,jdbcType=BIGINT},
      </if>
      <if test="taskType != null">
        #{taskType,jdbcType=TINYINT},
      </if>
      <if test="triggerEvent != null">
        #{triggerEvent,jdbcType=TINYINT},
      </if>
      <if test="receiveLimit != null">
        #{receiveLimit,jdbcType=INTEGER},
      </if>
      <if test="awardAmountType != null">
        #{awardAmountType,jdbcType=TINYINT},
      </if>
      <if test="awardFixAmount != null">
        #{awardFixAmount,jdbcType=INTEGER},
      </if>
      <if test="awardMin != null">
        #{awardMin,jdbcType=INTEGER},
      </if>
      <if test="awardMax != null">
        #{awardMax,jdbcType=INTEGER},
      </if>
      <if test="award != null">
        #{award,jdbcType=INTEGER},
      </if>
      <if test="receiveState != null">
        #{receiveState,jdbcType=TINYINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="tradeNo != null">
        #{tradeNo,jdbcType=VARCHAR},
      </if>
      <if test="handleState != null">
        #{handleState,jdbcType=TINYINT},
      </if>
      <if test="handleRemark != null">
        #{handleRemark,jdbcType=VARCHAR},
      </if>
      <if test="orderNo != null">
        #{orderNo,jdbcType=VARCHAR},
      </if>
      <if test="scychronizeFlag != null">
        #{scychronizeFlag,jdbcType=VARCHAR},
      </if>
      <if test="processCts != null">
        #{processCts,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.geek.shengka.gold.entity.SkUserTaskRecord">
    update sk_user_task_record
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="taskId != null">
        task_id = #{taskId,jdbcType=BIGINT},
      </if>
      <if test="taskType != null">
        task_type = #{taskType,jdbcType=TINYINT},
      </if>
      <if test="triggerEvent != null">
        trigger_event = #{triggerEvent,jdbcType=TINYINT},
      </if>
      <if test="receiveLimit != null">
        receive_limit = #{receiveLimit,jdbcType=INTEGER},
      </if>
      <if test="awardAmountType != null">
        award_amount_type = #{awardAmountType,jdbcType=TINYINT},
      </if>
      <if test="awardFixAmount != null">
        award_fix_amount = #{awardFixAmount,jdbcType=INTEGER},
      </if>
      <if test="awardMin != null">
        award_min = #{awardMin,jdbcType=INTEGER},
      </if>
      <if test="awardMax != null">
        award_max = #{awardMax,jdbcType=INTEGER},
      </if>
      <if test="award != null">
        award = #{award,jdbcType=INTEGER},
      </if>
      <if test="receiveState != null">
        receive_state = #{receiveState,jdbcType=TINYINT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="tradeNo != null">
        trade_no = #{tradeNo,jdbcType=VARCHAR},
      </if>
      <if test="handleState != null">
        handle_state = #{handleState,jdbcType=TINYINT},
      </if>
      <if test="handleRemark != null">
        handle_remark = #{handleRemark,jdbcType=VARCHAR},
      </if>
      <if test="orderNo != null">
        order_no = #{orderNo,jdbcType=VARCHAR},
      </if>
      <if test="scychronizeFlag != null">
        scychronize_flag = #{scychronizeFlag,jdbcType=VARCHAR},
      </if>
      <if test="processCts != null">
        process_cts = #{processCts,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.geek.shengka.gold.entity.SkUserTaskRecord">
    update sk_user_task_record
    set user_id = #{userId,jdbcType=BIGINT},
      task_id = #{taskId,jdbcType=BIGINT},
      task_type = #{taskType,jdbcType=TINYINT},
      trigger_event = #{triggerEvent,jdbcType=TINYINT},
      receive_limit = #{receiveLimit,jdbcType=INTEGER},
      award_amount_type = #{awardAmountType,jdbcType=TINYINT},
      award_fix_amount = #{awardFixAmount,jdbcType=INTEGER},
      award_min = #{awardMin,jdbcType=INTEGER},
      award_max = #{awardMax,jdbcType=INTEGER},
      award = #{award,jdbcType=INTEGER},
      receive_state = #{receiveState,jdbcType=TINYINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      trade_no = #{tradeNo,jdbcType=VARCHAR},
      handle_state = #{handleState,jdbcType=TINYINT},
      handle_remark = #{handleRemark,jdbcType=VARCHAR},
      order_no = #{orderNo,jdbcType=VARCHAR},
      scychronize_flag = #{scychronizeFlag,jdbcType=VARCHAR},
      process_cts = #{processCts,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>

<select id="selectTaskRecord" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from sk_user_task_record
    where user_id = #{userId} and task_id = #{taskId}
    <if test=" createTimeStart  != null and createTimeStart!=''">
        and create_time <![CDATA[ >= ]]> #{createTimeStart,jdbcType=VARCHAR}
    </if>
    <if test=" createTimeEnd != null and createTimeEnd !=''">
        and create_time  <![CDATA[ <= ]]> #{createTimeEnd,jdbcType=VARCHAR}
    </if>


</select>

<select id="countByUserIdAndTaskConfigId" resultType="java.lang.Integer" >
    select count(1)
    from sk_user_task_record
    where user_id = #{userId,jdbcType=BIGINT} and task_id = #{taskId,jdbcType=BIGINT}
    
    <if test=" createTimeStart != null and createTimeStart!=''">
        and create_time <![CDATA[ >= ]]> #{createTimeStart,jdbcType=VARCHAR}
    </if>
    
    <if test=" createTimeEnd != null and createTimeEnd !=''">
        and create_time  <![CDATA[ <= ]]> #{createTimeEnd,jdbcType=VARCHAR}
    </if>
 

</select>


<select id="selectByOrderNo" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from sk_user_task_record 
    where  order_no = #{orderNo,jdbcType=VARCHAR} and handle_state=0 and receive_state=1
</select>


<select id="selectOneNotReceiveRecord" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from sk_user_task_record
    where receive_state = 0 and  user_id = #{userId} and task_id = #{taskId} 
    
     <if test=" createTimeStart != null and createTimeStart!=''">
        and create_time <![CDATA[ >= ]]> #{createTimeStart,jdbcType=VARCHAR}
    </if>
    
    <if test=" createTimeEnd != null and createTimeEnd !=''">
        and create_time  <![CDATA[ <= ]]> #{createTimeEnd,jdbcType=VARCHAR}
    </if>
    
    limit 1    
</select>

</mapper>