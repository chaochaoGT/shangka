<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.geek.shengka.gold.mapper.SkWithdrawRecordDAO">
  <resultMap id="BaseResultMap" type="com.geek.shengka.gold.entity.SkWithdrawRecord">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="order_no" jdbcType="VARCHAR" property="orderNo" />
    <result column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="withdraw_amount" jdbcType="DECIMAL" property="withdrawAmount" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="money" jdbcType="DECIMAL" property="money" />
    <result column="trade_no" jdbcType="VARCHAR" property="tradeNo" />
    <result column="handle_state" jdbcType="TINYINT" property="handleState" />
    <result column="handle_remark" jdbcType="VARCHAR" property="handleRemark" />
    <result column="service_fee" jdbcType="DECIMAL" property="serviceFee" />
    <result column="withdraw_account" jdbcType="VARCHAR" property="withdrawAccount" />
    <result column="withdraw_account_type" jdbcType="TINYINT" property="withdrawAccountType" />
    <result column="withdraw_account_name" jdbcType="VARCHAR" property="withdrawAccountName" />
    <result column="scychronize_flag" jdbcType="VARCHAR" property="scychronizeFlag" />
    <result column="process_cts" jdbcType="INTEGER" property="processCts" />
  </resultMap>
  <sql id="Base_Column_List">
    id, order_no, user_id, withdraw_amount, create_time, update_time, money, trade_no, 
    handle_state, handle_remark, service_fee, withdraw_account, withdraw_account_type, 
    withdraw_account_name, scychronize_flag, process_cts
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from sk_user_withdraw_record
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from sk_user_withdraw_record
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.geek.shengka.gold.entity.SkWithdrawRecord">
    insert into sk_user_withdraw_record (id, order_no, user_id, 
      withdraw_amount, create_time, update_time, 
      money, trade_no, handle_state, 
      handle_remark, service_fee, withdraw_account, 
      withdraw_account_type, withdraw_account_name, 
      scychronize_flag, process_cts)
    values (#{id,jdbcType=BIGINT}, #{orderNo,jdbcType=VARCHAR}, #{userId,jdbcType=BIGINT}, 
      #{withdrawAmount,jdbcType=DECIMAL}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{money,jdbcType=DECIMAL}, #{tradeNo,jdbcType=VARCHAR}, #{handleState,jdbcType=TINYINT}, 
      #{handleRemark,jdbcType=VARCHAR}, #{serviceFee,jdbcType=DECIMAL}, #{withdrawAccount,jdbcType=VARCHAR}, 
      #{withdrawAccountType,jdbcType=TINYINT}, #{withdrawAccountName,jdbcType=VARCHAR}, 
      #{scychronizeFlag,jdbcType=VARCHAR}, #{processCts,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.geek.shengka.gold.entity.SkWithdrawRecord">
    insert into sk_user_withdraw_record
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="orderNo != null">
        order_no,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="withdrawAmount != null">
        withdraw_amount,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="money != null">
        money,
      </if>
      <if test="tradeNo != null">
        trade_no,
      </if>
      <if test="handleState != null">
        handle_state,
      </if>
      <if test="handleRemark != null">
        handle_remark,
      </if>
      <if test="serviceFee != null">
        service_fee,
      </if>
      <if test="withdrawAccount != null">
        withdraw_account,
      </if>
      <if test="withdrawAccountType != null">
        withdraw_account_type,
      </if>
      <if test="withdrawAccountName != null">
        withdraw_account_name,
      </if>
      <if test="scychronizeFlag != null">
        scychronize_flag,
      </if>
      <if test="processCts != null">
        process_cts,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="orderNo != null">
        #{orderNo,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="withdrawAmount != null">
        #{withdrawAmount,jdbcType=DECIMAL},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="money != null">
        #{money,jdbcType=DECIMAL},
      </if>
      <if test="tradeNo != null">
        #{tradeNo,jdbcType=VARCHAR},
      </if>
      <if test="handleState != null">
        #{handleState,jdbcType=TINYINT},
      </if>
      <if test="handleRemark != null">
        #{handleRemark,jdbcType=VARCHAR},
      </if>
      <if test="serviceFee != null">
        #{serviceFee,jdbcType=DECIMAL},
      </if>
      <if test="withdrawAccount != null">
        #{withdrawAccount,jdbcType=VARCHAR},
      </if>
      <if test="withdrawAccountType != null">
        #{withdrawAccountType,jdbcType=TINYINT},
      </if>
      <if test="withdrawAccountName != null">
        #{withdrawAccountName,jdbcType=VARCHAR},
      </if>
      <if test="scychronizeFlag != null">
        #{scychronizeFlag,jdbcType=VARCHAR},
      </if>
      <if test="processCts != null">
        #{processCts,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.geek.shengka.gold.entity.SkWithdrawRecord">
    update sk_user_withdraw_record
    <set>
      <if test="orderNo != null">
        order_no = #{orderNo,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="withdrawAmount != null">
        withdraw_amount = #{withdrawAmount,jdbcType=DECIMAL},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="money != null">
        money = #{money,jdbcType=DECIMAL},
      </if>
      <if test="tradeNo != null">
        trade_no = #{tradeNo,jdbcType=VARCHAR},
      </if>
      <if test="handleState != null">
        handle_state = #{handleState,jdbcType=TINYINT},
      </if>
      <if test="handleRemark != null">
        handle_remark = #{handleRemark,jdbcType=VARCHAR},
      </if>
      <if test="serviceFee != null">
        service_fee = #{serviceFee,jdbcType=DECIMAL},
      </if>
      <if test="withdrawAccount != null">
        withdraw_account = #{withdrawAccount,jdbcType=VARCHAR},
      </if>
      <if test="withdrawAccountType != null">
        withdraw_account_type = #{withdrawAccountType,jdbcType=TINYINT},
      </if>
      <if test="withdrawAccountName != null">
        withdraw_account_name = #{withdrawAccountName,jdbcType=VARCHAR},
      </if>
      <if test="scychronizeFlag != null">
        scychronize_flag = #{scychronizeFlag,jdbcType=VARCHAR},
      </if>
      <if test="processCts != null">
        process_cts = #{processCts,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.geek.shengka.gold.entity.SkWithdrawRecord">
    update sk_user_withdraw_record
    set order_no = #{orderNo,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=BIGINT},
      withdraw_amount = #{withdrawAmount,jdbcType=DECIMAL},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      money = #{money,jdbcType=DECIMAL},
      trade_no = #{tradeNo,jdbcType=VARCHAR},
      handle_state = #{handleState,jdbcType=TINYINT},
      handle_remark = #{handleRemark,jdbcType=VARCHAR},
      service_fee = #{serviceFee,jdbcType=DECIMAL},
      withdraw_account = #{withdrawAccount,jdbcType=VARCHAR},
      withdraw_account_type = #{withdrawAccountType,jdbcType=TINYINT},
      withdraw_account_name = #{withdrawAccountName,jdbcType=VARCHAR},
      scychronize_flag = #{scychronizeFlag,jdbcType=VARCHAR},
      process_cts = #{processCts,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
  
  
    <select id="selectByHandleState" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from sk_user_withdraw_record
    where 1=1   and handle_state in(0,2)  and process_cts &lt; 50  and withdraw_amount &gt; 0
      and scychronize_flag = '' 
  	limit 100
  </select>
  
  
  
    <update id="updateByOrderNo" parameterType="com.geek.shengka.gold.entity.SkWithdrawRecord">
    update sk_user_withdraw_record
    <set>
      <if test="tradeNo != null or tradeNo != ''">
      trade_no = #{tradeNo,jdbcType=VARCHAR},
      </if>
      handle_state = #{handleState,jdbcType=TINYINT},
      handle_remark = #{handleRemark,jdbcType=VARCHAR},
       process_cts = process_cts + 1
    </set>
    where order_no = #{orderNo,jdbcType=VARCHAR}
  </update>
  


    <update id="attachDataLock" >
        update sk_user_withdraw_record 
        set scychronize_flag = #{scychronizeFlag,jdbcType=VARCHAR}
        where scychronize_flag = '' 
        and id = #{id,jdbcType=BIGINT}
    </update>
    
    
     <update id="releaseDataLock" >
        update sk_user_withdraw_record 
        set scychronize_flag = '' 
        where scychronize_flag = #{scychronizeFlag,jdbcType=VARCHAR}
        and id = #{id,jdbcType=BIGINT}
    </update>
    
    <update id="processFinish" >
        update sk_user_withdraw_record 
        set gold_check_status = 1, process_cts = process_cts + 1
        where id = #{id,jdbcType=BIGINT}
    </update>
    
    <select id="selectByDataLock" 
            resultType="java.lang.Long">
        select
        id
        from sk_user_withdraw_record
        where id = #{id,jdbcType=BIGINT}
        and scychronize_flag = #{scychronizeFlag,jdbcType=VARCHAR}
    </select>



	 <update id="handleFinal" >
	        update lw_v2_arena_config 
	        set scychronize_flag = '' 
	        where scychronize_flag = #{scychronizeFlag,jdbcType=VARCHAR}
	    </update>
	    
	    
  
  
</mapper>